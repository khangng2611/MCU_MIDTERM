/*
 * fsm_simple_button_run.c
 *
 *  Created on: Nov 5, 2022
 *      Author: HP
 */
#include"fsm_simple_button_run.h"

//void button_process () {
//	if (isButtonPressed(0) == 1) {
//		count = 0;
//		status = RESET_STATE;
//	}
//	if (isButtonPressed(1) == 1) {
//		count = (count == 9) ? 0 : count+1;
//		status = INC;
//		setTimer1(10000);
//	}
//	if (isButtonPressed(2) == 1) {
//		count = (count == 0) ? 9 : count-1;
//		status = DEC;
//		setTimer1(10000);
//	}
//}

void fsm_simple_buttons_run () {
	switch (status) {
	case INIT:
		status = RESET_STATE;
		break;
	case RESET_STATE:
		display7SEG(count);
		if (isButtonPressed(0) == 1) {
			status = RESET_STATE;
		}
		if (isButtonPressed(1) == 1) {
			count = (count == 9)? 0 : count+1;
			setTimer1(10000);
			count_long_pressed = 0;
			status = INC;
		}
		if (isButtonPressed(2) == 1) {
			count = (count == 0) ? 9 : count-1;
			setTimer1(10000);
			count_long_pressed = 0;
			status = DEC;
		}
		break;
	case INC:
		display7SEG(count);
		if (isButtonPressed(0) == 1) {
			count = 0;
			status = RESET_STATE;
		}
		if (isButtonPressed(2) == 1) {
			count = (count == 0) ? 9 : count-1;
			count_long_pressed = 0;
			setTimer1(10000);
			status = DEC;
		}
		if (isButtonPressed(1) == 1) {
			if (isButtonLongPressed(1) == 1) {
				count_long_pressed ++;
				if (count_long_pressed == 3) {
					setTimer1(10000);
					status = LONG_PRESSED_INC;
				}
			}
			else {
				count = (count == 9) ? 0 : count+1;
				count_long_pressed = 0;
			}
		}
		if (timer1_flag == 1) {
			status = AUTO;
			setTimer1(1000);
		}
		break;
	case DEC:
		display7SEG(count);
		if (isButtonPressed(0) == 1) {
			count = 0;
			status = RESET_STATE;
		}
		if (isButtonPressed(1) == 1) {
			count = (count == 9) ? 0 : count+1;
			count_long_pressed = 0;
			setTimer1(10000);
			status = INC;
		}
		if (isButtonPressed(2) == 1) {
			if (isButtonLongPressed(2) == 1) {
				count_long_pressed ++;
				if (count_long_pressed == 3) {
					setTimer1(10000);
					status = LONG_PRESSED_DEC;
				}
			}
			else {
				count = (count == 0) ? 9 : count-1;
				count_long_pressed = 0;
			}
		}
		if (timer1_flag == 1) {
			setTimer1(1000);
			status = AUTO;
		}
		break;
	case LONG_PRESSED_INC:
		display7SEG(count);
		if (isButtonPressed(0) == 1) {
			count = 0;
			status = RESET_STATE;
		}
		if (isButtonPressed(1) == 1) {
			count = (count == 9) ? 0 : count+1;
			setTimer1(10000);
		}
		if (isButtonPressed(2) == 1) {
			count = (count == 0) ? 9 : count-1;
			setTimer1(10000);
			count_long_pressed = 0;
			status = DEC;
		}
		if (timer1_flag == 1) {
			status = AUTO;
			setTimer1(1000);
		}
		break;
	case LONG_PRESSED_DEC:
		display7SEG(count);
		if (isButtonPressed(2) == 1) {
			count = (count == 0) ? 9 : count-1;
			setTimer1(10000);
		}
		if (isButtonPressed(0) == 1) {
			count = 0;
			status = RESET_STATE;
		}
		if (isButtonPressed(1) == 1) {
			count = (count == 9) ? 0 : count+1;
			status = INC;
			setTimer1(10000);
			count_long_pressed = 0;
		}
		if (timer1_flag == 1) {
			status = AUTO;
			setTimer1(1000);
		}
		break;
	case AUTO:
		display7SEG(count);
		if (isButtonPressed(0) == 1) {
			count = 0;
			status = RESET_STATE;
		}
		if (isButtonPressed(1) == 1) {
			count = (count == 9) ? 0 : count+1;
			status = INC;
			setTimer1(10000);
			count_long_pressed = 0;
		}
		if (isButtonPressed(2) == 1) {
			count = (count == 0) ? 9 : count-1;
			status = DEC;
			setTimer1(10000);
			count_long_pressed = 0;
		}
		if (timer1_flag == 1) {
			if (count > 0) count --;
			setTimer1(1000);
		}
		break;
	default:
		break;
	}
}
